// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: StartUp.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Inferno.Protos {

  /// <summary>Holder for reflection information generated from StartUp.proto</summary>
  public static partial class StartUpReflection {

    #region Descriptor
    /// <summary>File descriptor for StartUp.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StartUpReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1TdGFydFVwLnByb3RvEhJjb20uaW5mZXJuby5wcm90b3MaEVNoYXJlZEVu",
            "dW1zLnByb3RvIk0KDFZlcnNpb25Qcm90bxITCgttYWpvck51bWJlchgBIAEo",
            "BRITCgttaW5vck51bWJlchgCIAEoBRITCgtwYXRjaE51bWJlchgDIAEoBSKC",
            "AQoHU3RhcnRVcBIMCgR1ZGlkGAEgASgJEgwKBGZiaWQYAiABKAkSEAoIcGxh",
            "dGZvcm0YAyABKAkSMQoHdmVyc2lvbhgEIAEoCzIgLmNvbS5pbmZlcm5vLnBy",
            "b3Rvcy5WZXJzaW9uUHJvdG8SFgoOc3RhdGljRGF0YUhhc2gYBSABKAkipwMK",
            "D1N0YXJ0VXBSZXNwb25zZRIKCgJpZBgBIAEoCRJQCg1zdGFydHVwU3RhdHVz",
            "GAIgASgOMjkuY29tLmluZmVybm8ucHJvdG9zLlN0YXJ0VXBSZXNwb25zZS5T",
            "dGFydHVwUmVzcG9uc2VTdGF0dXMSRgoMcGxheWVyU3RhdHVzGAMgASgOMjAu",
            "Y29tLmluZmVybm8ucHJvdG9zLlN0YXJ0VXBSZXNwb25zZS5QbGF5ZXJTdGF0",
            "dXMSDwoHbWVzc2FnZRgEIAEoCSJ6ChVTdGFydHVwUmVzcG9uc2VTdGF0dXMS",
            "FwoTU1RBUlRVUF9TVEFUVVNfTk9ORRAAEhAKDE1BSk9SX1VQREFURRABEhAK",
            "DE1JTk9SX1VQREFURRACEg0KCU5PX1VQREFURRADEgsKB1NVQ0NFU1MQBBII",
            "CgRGQUlMEAUiYQoMUGxheWVyU3RhdHVzEhYKElBMQVlFUl9TVEFUVVNfTk9O",
            "RRAAEhQKEFBMQVlFUl9OT1RfRk9VTkQQARIQCgxQTEFZRVJfRk9VTkQQAhIR",
            "Cg1QTEFZRVJfQkFOTkVEEANCD0INU3RhcnR1cFByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Com.Inferno.Protos.SharedEnumsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Inferno.Protos.VersionProto), global::Com.Inferno.Protos.VersionProto.Parser, new[]{ "MajorNumber", "MinorNumber", "PatchNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Inferno.Protos.StartUp), global::Com.Inferno.Protos.StartUp.Parser, new[]{ "Udid", "Fbid", "Platform", "Version", "StaticDataHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Inferno.Protos.StartUpResponse), global::Com.Inferno.Protos.StartUpResponse.Parser, new[]{ "Id", "StartupStatus", "PlayerStatus", "Message" }, null, new[]{ typeof(global::Com.Inferno.Protos.StartUpResponse.Types.StartupResponseStatus), typeof(global::Com.Inferno.Protos.StartUpResponse.Types.PlayerStatus) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class VersionProto : pb::IMessage<VersionProto> {
    private static readonly pb::MessageParser<VersionProto> _parser = new pb::MessageParser<VersionProto>(() => new VersionProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<VersionProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Inferno.Protos.StartUpReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionProto(VersionProto other) : this() {
      majorNumber_ = other.majorNumber_;
      minorNumber_ = other.minorNumber_;
      patchNumber_ = other.patchNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VersionProto Clone() {
      return new VersionProto(this);
    }

    /// <summary>Field number for the "majorNumber" field.</summary>
    public const int MajorNumberFieldNumber = 1;
    private int majorNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MajorNumber {
      get { return majorNumber_; }
      set {
        majorNumber_ = value;
      }
    }

    /// <summary>Field number for the "minorNumber" field.</summary>
    public const int MinorNumberFieldNumber = 2;
    private int minorNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MinorNumber {
      get { return minorNumber_; }
      set {
        minorNumber_ = value;
      }
    }

    /// <summary>Field number for the "patchNumber" field.</summary>
    public const int PatchNumberFieldNumber = 3;
    private int patchNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PatchNumber {
      get { return patchNumber_; }
      set {
        patchNumber_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as VersionProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(VersionProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MajorNumber != other.MajorNumber) return false;
      if (MinorNumber != other.MinorNumber) return false;
      if (PatchNumber != other.PatchNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MajorNumber != 0) hash ^= MajorNumber.GetHashCode();
      if (MinorNumber != 0) hash ^= MinorNumber.GetHashCode();
      if (PatchNumber != 0) hash ^= PatchNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MajorNumber != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MajorNumber);
      }
      if (MinorNumber != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MinorNumber);
      }
      if (PatchNumber != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PatchNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MajorNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MajorNumber);
      }
      if (MinorNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MinorNumber);
      }
      if (PatchNumber != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PatchNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(VersionProto other) {
      if (other == null) {
        return;
      }
      if (other.MajorNumber != 0) {
        MajorNumber = other.MajorNumber;
      }
      if (other.MinorNumber != 0) {
        MinorNumber = other.MinorNumber;
      }
      if (other.PatchNumber != 0) {
        PatchNumber = other.PatchNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MajorNumber = input.ReadInt32();
            break;
          }
          case 16: {
            MinorNumber = input.ReadInt32();
            break;
          }
          case 24: {
            PatchNumber = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartUp : pb::IMessage<StartUp> {
    private static readonly pb::MessageParser<StartUp> _parser = new pb::MessageParser<StartUp>(() => new StartUp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartUp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Inferno.Protos.StartUpReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartUp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartUp(StartUp other) : this() {
      udid_ = other.udid_;
      fbid_ = other.fbid_;
      platform_ = other.platform_;
      version_ = other.version_ != null ? other.version_.Clone() : null;
      staticDataHash_ = other.staticDataHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartUp Clone() {
      return new StartUp(this);
    }

    /// <summary>Field number for the "udid" field.</summary>
    public const int UdidFieldNumber = 1;
    private string udid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Udid {
      get { return udid_; }
      set {
        udid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fbid" field.</summary>
    public const int FbidFieldNumber = 2;
    private string fbid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fbid {
      get { return fbid_; }
      set {
        fbid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform" field.</summary>
    public const int PlatformFieldNumber = 3;
    private string platform_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Platform {
      get { return platform_; }
      set {
        platform_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 4;
    private global::Com.Inferno.Protos.VersionProto version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Inferno.Protos.VersionProto Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "staticDataHash" field.</summary>
    public const int StaticDataHashFieldNumber = 5;
    private string staticDataHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StaticDataHash {
      get { return staticDataHash_; }
      set {
        staticDataHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartUp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartUp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Udid != other.Udid) return false;
      if (Fbid != other.Fbid) return false;
      if (Platform != other.Platform) return false;
      if (!object.Equals(Version, other.Version)) return false;
      if (StaticDataHash != other.StaticDataHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Udid.Length != 0) hash ^= Udid.GetHashCode();
      if (Fbid.Length != 0) hash ^= Fbid.GetHashCode();
      if (Platform.Length != 0) hash ^= Platform.GetHashCode();
      if (version_ != null) hash ^= Version.GetHashCode();
      if (StaticDataHash.Length != 0) hash ^= StaticDataHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Udid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Udid);
      }
      if (Fbid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fbid);
      }
      if (Platform.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Platform);
      }
      if (version_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Version);
      }
      if (StaticDataHash.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StaticDataHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Udid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Udid);
      }
      if (Fbid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fbid);
      }
      if (Platform.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Platform);
      }
      if (version_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Version);
      }
      if (StaticDataHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StaticDataHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartUp other) {
      if (other == null) {
        return;
      }
      if (other.Udid.Length != 0) {
        Udid = other.Udid;
      }
      if (other.Fbid.Length != 0) {
        Fbid = other.Fbid;
      }
      if (other.Platform.Length != 0) {
        Platform = other.Platform;
      }
      if (other.version_ != null) {
        if (version_ == null) {
          version_ = new global::Com.Inferno.Protos.VersionProto();
        }
        Version.MergeFrom(other.Version);
      }
      if (other.StaticDataHash.Length != 0) {
        StaticDataHash = other.StaticDataHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Udid = input.ReadString();
            break;
          }
          case 18: {
            Fbid = input.ReadString();
            break;
          }
          case 26: {
            Platform = input.ReadString();
            break;
          }
          case 34: {
            if (version_ == null) {
              version_ = new global::Com.Inferno.Protos.VersionProto();
            }
            input.ReadMessage(version_);
            break;
          }
          case 42: {
            StaticDataHash = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StartUpResponse : pb::IMessage<StartUpResponse> {
    private static readonly pb::MessageParser<StartUpResponse> _parser = new pb::MessageParser<StartUpResponse>(() => new StartUpResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartUpResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Inferno.Protos.StartUpReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartUpResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartUpResponse(StartUpResponse other) : this() {
      id_ = other.id_;
      startupStatus_ = other.startupStatus_;
      playerStatus_ = other.playerStatus_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartUpResponse Clone() {
      return new StartUpResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "startupStatus" field.</summary>
    public const int StartupStatusFieldNumber = 2;
    private global::Com.Inferno.Protos.StartUpResponse.Types.StartupResponseStatus startupStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Inferno.Protos.StartUpResponse.Types.StartupResponseStatus StartupStatus {
      get { return startupStatus_; }
      set {
        startupStatus_ = value;
      }
    }

    /// <summary>Field number for the "playerStatus" field.</summary>
    public const int PlayerStatusFieldNumber = 3;
    private global::Com.Inferno.Protos.StartUpResponse.Types.PlayerStatus playerStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Inferno.Protos.StartUpResponse.Types.PlayerStatus PlayerStatus {
      get { return playerStatus_; }
      set {
        playerStatus_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartUpResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartUpResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (StartupStatus != other.StartupStatus) return false;
      if (PlayerStatus != other.PlayerStatus) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (StartupStatus != 0) hash ^= StartupStatus.GetHashCode();
      if (PlayerStatus != 0) hash ^= PlayerStatus.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (StartupStatus != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) StartupStatus);
      }
      if (PlayerStatus != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) PlayerStatus);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (StartupStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StartupStatus);
      }
      if (PlayerStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PlayerStatus);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartUpResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.StartupStatus != 0) {
        StartupStatus = other.StartupStatus;
      }
      if (other.PlayerStatus != 0) {
        PlayerStatus = other.PlayerStatus;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            startupStatus_ = (global::Com.Inferno.Protos.StartUpResponse.Types.StartupResponseStatus) input.ReadEnum();
            break;
          }
          case 24: {
            playerStatus_ = (global::Com.Inferno.Protos.StartUpResponse.Types.PlayerStatus) input.ReadEnum();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StartUpResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum StartupResponseStatus {
        [pbr::OriginalName("STARTUP_STATUS_NONE")] StartupStatusNone = 0,
        [pbr::OriginalName("MAJOR_UPDATE")] MajorUpdate = 1,
        [pbr::OriginalName("MINOR_UPDATE")] MinorUpdate = 2,
        [pbr::OriginalName("NO_UPDATE")] NoUpdate = 3,
        [pbr::OriginalName("SUCCESS")] Success = 4,
        [pbr::OriginalName("FAIL")] Fail = 5,
      }

      public enum PlayerStatus {
        [pbr::OriginalName("PLAYER_STATUS_NONE")] None = 0,
        [pbr::OriginalName("PLAYER_NOT_FOUND")] PlayerNotFound = 1,
        [pbr::OriginalName("PLAYER_FOUND")] PlayerFound = 2,
        [pbr::OriginalName("PLAYER_BANNED")] PlayerBanned = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
