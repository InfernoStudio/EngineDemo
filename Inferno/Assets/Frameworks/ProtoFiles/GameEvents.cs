// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GameEvents.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Com.Inferno.Protos {

  /// <summary>Holder for reflection information generated from GameEvents.proto</summary>
  public static partial class GameEventsReflection {

    #region Descriptor
    /// <summary>File descriptor for GameEvents.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GameEventsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHYW1lRXZlbnRzLnByb3RvEhJjb20uaW5mZXJuby5wcm90b3MaCkRhdGEu",
            "cHJvdG8i1gEKC1Jld2FyZEV2ZW50EkIKCWV2ZW50VHlwZRgBIAEoDjIvLmNv",
            "bS5pbmZlcm5vLnByb3Rvcy5SZXdhcmRFdmVudC5SZXdhcmRFdmVudFR5cGUS",
            "GAoHcmV3YXJkcxgCIAMoCzIHLlJld2FyZBIMCgRzbG90GAMgASgFEg8KB3Vz",
            "ZXJfaWQYBCABKAkiSgoPUmV3YXJkRXZlbnRUeXBlEggKBE5PTkUQABIOCgpC",
            "QVRUTEVfV0lOEAESDgoKQ0hFU1RfT1BFThACEg0KCUNIRVNUX0JVWRADYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::DataReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Com.Inferno.Protos.RewardEvent), global::Com.Inferno.Protos.RewardEvent.Parser, new[]{ "EventType", "Rewards", "Slot", "UserId" }, null, new[]{ typeof(global::Com.Inferno.Protos.RewardEvent.Types.RewardEventType) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class RewardEvent : pb::IMessage<RewardEvent> {
    private static readonly pb::MessageParser<RewardEvent> _parser = new pb::MessageParser<RewardEvent>(() => new RewardEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RewardEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Com.Inferno.Protos.GameEventsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardEvent(RewardEvent other) : this() {
      eventType_ = other.eventType_;
      rewards_ = other.rewards_.Clone();
      slot_ = other.slot_;
      userId_ = other.userId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RewardEvent Clone() {
      return new RewardEvent(this);
    }

    /// <summary>Field number for the "eventType" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::Com.Inferno.Protos.RewardEvent.Types.RewardEventType eventType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Com.Inferno.Protos.RewardEvent.Types.RewardEventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "rewards" field.</summary>
    public const int RewardsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Reward> _repeated_rewards_codec
        = pb::FieldCodec.ForMessage(18, global::Reward.Parser);
    private readonly pbc::RepeatedField<global::Reward> rewards_ = new pbc::RepeatedField<global::Reward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Reward> Rewards {
      get { return rewards_; }
    }

    /// <summary>Field number for the "slot" field.</summary>
    public const int SlotFieldNumber = 3;
    private int slot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Slot {
      get { return slot_; }
      set {
        slot_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RewardEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RewardEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if(!rewards_.Equals(other.rewards_)) return false;
      if (Slot != other.Slot) return false;
      if (UserId != other.UserId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != 0) hash ^= EventType.GetHashCode();
      hash ^= rewards_.GetHashCode();
      if (Slot != 0) hash ^= Slot.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      rewards_.WriteTo(output, _repeated_rewards_codec);
      if (Slot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Slot);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      size += rewards_.CalculateSize(_repeated_rewards_codec);
      if (Slot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Slot);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RewardEvent other) {
      if (other == null) {
        return;
      }
      if (other.EventType != 0) {
        EventType = other.EventType;
      }
      rewards_.Add(other.rewards_);
      if (other.Slot != 0) {
        Slot = other.Slot;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            eventType_ = (global::Com.Inferno.Protos.RewardEvent.Types.RewardEventType) input.ReadEnum();
            break;
          }
          case 18: {
            rewards_.AddEntriesFrom(input, _repeated_rewards_codec);
            break;
          }
          case 24: {
            Slot = input.ReadInt32();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the RewardEvent message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum RewardEventType {
        [pbr::OriginalName("NONE")] None = 0,
        [pbr::OriginalName("BATTLE_WIN")] BattleWin = 1,
        [pbr::OriginalName("CHEST_OPEN")] ChestOpen = 2,
        [pbr::OriginalName("CHEST_BUY")] ChestBuy = 3,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
